# bspwm hotkeys
#
# Cleanly quit bspwm
super + shift + q
	bspc quit 1 && pkill lemonpanel && pkill lemonbar

# Show keybindings
super + shift + a
	$TERMINAL -e keybindings.sh
#
# Window manipulation
# ______________

# Close window
super + x
	bspc  node -c

# Kill window
super + shift + x
	bspc  node -k

# Toggle tiling mode of window
super + shift + t
	bspc node -t {pseudo_tiled,tiled}
super + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}
# Force all windows of the desktop to tile
super + ctrl + t
	bspcp tile
# Force all windows of the desktop to float and arrange them
super + ctrl + shift + t
	bspcp float
	
# Toggle fullscreen
super + shift + f 
	bspc node -t {fullscreen,tiled}	

# Try to keep size and position of the selected window
super + o
	bspc node -g private

# Make window sticky
super + i
	bspc node -g sticky

# Lock a window from closing
super + Escape
	bspc node -g locked 

### Map or unmap windows (functional equivalent of "minimize")
super + c
    whid dmenu

super + shift + c
    whid hide

super + ctrl + c
    whid last

#
# Window moving and splitting
# ______________    

# Autopresel (split window in its largest dimension)
ctrl + space + super 
	auto-presel
	
# Presel window for splitting in certain direction
alt + super + {h,j,k,l}
	bspc node -p \~{west,south,north,east}

# Presel the desktop for splitting in certain direction
# alt + shift + {a,s,w,d}
	# bspc node @/ -p \~{west,south,north,east}
# 
# alt + shift + {h,j,k,l}
	# bspc node @/ -p \~{west,south,north,east}

# alt + shift + {Left,Down,Up,Right}
	# bspc node @/ -p \~{west,south,north,east}
# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}
		
# Move current window to largest space or preselected area if there is one.
super + Return
    windowpromoter

# Create a new "master area", splitting the whole desktop instead of just windows.
alt + Return
	bspc node -n @/
	
# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10}

super + {_, shift +}{F1,F2,F3,F4,F5,F6,F7,F8,F9,F10}
    bspc {desktop -f,node -d} ^{11,12,13,14,15,16,17,18,19,20}
## Alternative: i3 style behavior (focus nth, desktop of the focused monitor)
#super + {1-9,0}
#	focusdesktopofthismonitor {1-9}
#super + shift + {1-9,0}
#	movetodesktopofthismonitor {1-9,10}

## Another alternative: xmonad style desktops. You have 10 desktops shared between all monitors,
## and focusing a desktop focuses it on the currently focused monitor
#super + {1-9,0}
#	summondesktop.sh {1-9,10}
#super + shift + {1-9,0}
#	bspc node -d ^{1-9,10}

# Select previous / next desktop
super + {m,n}
	bspc desktop -f {prev.occupied,next.occupied} 

# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

# Go to specific window
super + Tab
	WindowSelector
	
#Focus windows by direction, works with multihead
super +  {h,j,k,l}
    focusmover {west,south,north,east}
        	
# Move tiled windows. Moving a tiled window to 
# preselected one moves into preselection instead. 
# Moving out of the screen should move the window to next monitor if possible
super + shift + {h,j,k,l}
	windowgrabber {west,south,north,east}
	
# Different style of movement: transplant into window in chosen direction
super + shift + {Left,Down,Up,Right}
	euclid_mover {west,south,north,east}

#resize windows
super + ctrl + {a,s,w,d}
	bspwm_resize.sh {west,south,north,east}

super + ctrl + {h,j,k,l}
	bspwm_resize.sh {west,south,north,east}
	
super + ctrl + {Left,Down,Up,Right}
	bspwm_resize.sh {west,south,north,east}

#
# Layout manipulation/desktop level controls
# ______________    

# Toggle monocle mode
super + f 
	bspc desktop -l next
	
# Balance tree
super + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Toggle automatic balancing of windows
#alt + b
#	euclid_balancer

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}
	
# Rotate leaves of tree
super + shift + {comma,period}
	bspc node @/ -R {90,270}

# Change window gap

super + g
	bspc config -d focused window_gap {$gap,$(($gap+$gap)),$(($gap+$gap+$gap))}

super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))
#
# mouse bindings
# __________________

#~button1
#	DidIClickDesktop.sh && gapgrab	

~button2
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmDesktopMenui
#DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmWindowMenui
		
~button3
	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/LaunchMenu

# Switch workspace by scrolling on the desktop. Causes scrolling issues on some systems.
#~button4
#	DidIClickDesktop.sh && bspc desktop -f next
#~button5
#	DidIClickDesktop.sh && bspc desktop -f prev
	
### Add or remove desktops by scrolling
super + ctrl + button5
    bspcp dsktp rm

super + ctrl + button4
    bspcp dsktp add

# Spawn applications popup menu and manually tile selected 
# app where your mouse was when you opened the menu. Smartsplit only chooses
# biggest dimension of the window, MouseLaunch only cares which edge is closer.
# mod5 is alt_gr (first key right from space) on most keyboards. 
#mod5 + @button1
#    MouseLaunch ; mygtkmenui -- .config/GTKmenu/LaunchMenu
#	smartsplit ; dboxmenu

# Spawn window manipulation menu
# Mod1 is alt
#    BspwmWindowMenu
#mod1 + @button1
#    mygtkmenui -- .config/GTKmenu/BspwmWindowMenui


#
# Touchpad "gestures" (depend on your touchpad driver, very likely to be unavailable)
#_____________________
    
#
# spawn programs
#


# Triggered by jus tapping super 
super + shift + space
	rofi -show-icons -font "IBM Plex Sans 12" -show drun 

super + w
	rofi -show-icons -font "IBM Plex Sans 12" -show window

super + y
	kill -s USR1 $(pidof deadd-notification-center)
#	xdo show -N Polybar

#super + u
#	xdo hide -N Polybar

super + p
	bspc desktop -f 1 && $TERMINAL stmx &

super + shift + p 
	bspc desktop -f 11 && $TERMINAL mtmx &

super + shift + Return
	default-terminal
super + {_,shift +}z
    {default-terminal, bspc rule -a \* -o state=floating center=true rectangle=800x600+0+0 && default-terminal}
	
super + r
	rofi -show-icons -font "IBM Plex Sans 12" -show run	

super + shift + b
	$BROWSER
    		
super + e
	nautilus

# Use slightly bigger font for ranger
super + shift + e
	default-terminal ranger

Print
	flameshot gui
	
# start/stop a gif recording of a selection
ctrl + Print
  { giph -s -l -c 0.3\,0\,0.5\,0.3 ~/Videos/$(date +%s).gif, killall -INT -g giph }

# start/stop a gif recording of a selection, upload to 0x0.st and copy url to clipboard
ctrl + shift + Print
  { giph -s -l -c 0.3\,0\,0.5\,0.3 | (trap '' INT; curl -F "file=@-" 0x0.st | xclip -selection clipboard), killall -INT -g giph }

#
# Media keys
#

XF86AudioRaiseVolume
	volume up

XF86AudioLowerVolume
	volume down

XF86AudioMute
	volume mute
	
XF86MonBrightnessDown
 light -U 5 

XF86MonBrightnessUp
 light -A 5
 

XF86Sleep
	systemctl suspend

# make sxhkd reload its configuration files:
super + shift + Escape
	pkill -USR1 -x sxhkd

# In case bspwmrc fails to execute/you wish have plugged in a new monitor
super + shift + r
	bspwmrc
#edit this file
alt + ctrl + space
	$GUI_EDITOR ~/.config/sxhkd/sxhkdrc
# Toggle compositing
super + ctrl + space
	{pkill compton ,\
	compton -b }

# Remove receptacles
super + BackSpace
  for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done

# Suspend the pc.
super + shift + y
	#betterlockscreen -s dimblur -t "Locked"

# Lock session.
super + shift + u
	betterlockscreen -l dimblur -t "Locked"	
